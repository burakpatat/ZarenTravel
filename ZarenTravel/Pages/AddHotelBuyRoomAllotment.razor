@page "/add-hotel-buy-room-allotment"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService

@inject ZarenSoftService ZarenSoftService

<PageTitle>Add HotelBuyRoomAllotment</PageTitle>
    <div class="col-md-12">
        <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">Cannot save HotelBuyRoomAllotment</RadzenAlert>
        <RadzenTemplateForm TItem="ZarenTravel.Models.ZarenSoft.HotelBuyRoomAllotment" Data="@hotelBuyRoomAllotment" Visible="@(hotelBuyRoomAllotment != null)" Submit="@FormSubmit">
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Day" Component="Day" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenDatePicker DateFormat="MM/dd/yyyy" style="display: block; width: 100%" @bind-Value="@hotelBuyRoomAllotment.Day" Name="Day" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Allotment" Component="Allotment" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@hotelBuyRoomAllotment.Allotment" Name="Allotment" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Release" Component="Release" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@hotelBuyRoomAllotment.Release" Name="Release" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Stop Sales" Component="StopSales" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@hotelBuyRoomAllotment.StopSales" Name="StopSales" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Hotel Buy Room" Component="HotelBuyRoom" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenDropDownDataGrid Data="@hotelBuyRoomsForHotelBuyRoomId" TextProperty="" ValueProperty="Id"
                        Disabled=@(hasHotelBuyRoomIdValue) Placeholder="Choose HotelBuyRoom" style="display: block; width: 100%" @bind-Value="@hotelBuyRoomAllotment.HotelBuyRoomId" Name="HotelBuyRoomId"
                           />
                </div>
            </div>
            <div class="row">
                <div class="col d-flex justify-content-end" style="margin-top: 1rem">
                    <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Icon="save" Text="Save" Style="margin-right: 0.5rem" Variant="Variant.Flat" />
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Variant="Variant.Flat" Click="@CancelButtonClick"  />
                </div>
            </div>
        </RadzenTemplateForm>
    </div>

@code {

    protected override async Task OnInitializedAsync()
    {

        hotelBuyRoomsForHotelBuyRoomId = await ZarenSoftService.GetHotelBuyRooms();
    }
    protected bool errorVisible;
    protected ZarenTravel.Models.ZarenSoft.HotelBuyRoomAllotment hotelBuyRoomAllotment;

    protected IEnumerable<ZarenTravel.Models.ZarenSoft.HotelBuyRoom> hotelBuyRoomsForHotelBuyRoomId;

    protected async Task FormSubmit()
    {
        try
        {
            await ZarenSoftService.CreateHotelBuyRoomAllotment(hotelBuyRoomAllotment);
            DialogService.Close(hotelBuyRoomAllotment);
        }
        catch (Exception ex)
        {
            errorVisible = true;
        }
    }

    protected async Task CancelButtonClick(MouseEventArgs args)
    {
        DialogService.Close(null);
    }





    bool hasHotelBuyRoomIdValue;

    [Parameter]
    public int? HotelBuyRoomId { get; set; }
    public override async Task SetParametersAsync(ParameterView parameters)
    {
        hotelBuyRoomAllotment = new ZarenTravel.Models.ZarenSoft.HotelBuyRoomAllotment();

        hasHotelBuyRoomIdValue = parameters.TryGetValue<int?>("HotelBuyRoomId", out var hasHotelBuyRoomIdResult);

        if (hasHotelBuyRoomIdValue)
        {
            hotelBuyRoomAllotment.HotelBuyRoomId = hasHotelBuyRoomIdResult;
        }
        await base.SetParametersAsync(parameters);
    }
}
