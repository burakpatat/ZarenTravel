@page "/add-reservation-detail"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService

@inject ZarenSoftService ZarenSoftService

<PageTitle>Add ReservationDetail</PageTitle>
    <div class="col-md-12">
        <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">Cannot save ReservationDetail</RadzenAlert>
        <RadzenTemplateForm TItem="ZarenTravel.Models.ZarenSoft.ReservationDetail" Data="@reservationDetail" Visible="@(reservationDetail != null)" Submit="@FormSubmit">
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Propert I D" Component="PropertID" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@reservationDetail.PropertID" Name="PropertID" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Propert Price" Component="PropertPrice" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@reservationDetail.PropertPrice" Name="PropertPrice" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Apart Price" Component="ApartPrice" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenTextBox style="display: block; width: 100%" @bind-Value="@reservationDetail.ApartPrice" Name="ApartPrice" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Reservation" Component="Reservation" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenDropDownDataGrid Data="@reservationsForRezervationID" TextProperty="ReferenceCode" ValueProperty="ID"
                        Disabled=@(hasRezervationIDValue) Placeholder="Choose Reservation" style="display: block; width: 100%" @bind-Value="@reservationDetail.RezervationID" Name="RezervationID"
                           />
                </div>
            </div>
            <div class="row">
                <div class="col d-flex justify-content-end" style="margin-top: 1rem">
                    <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Icon="save" Text="Save" Style="margin-right: 0.5rem" Variant="Variant.Flat" />
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Variant="Variant.Flat" Click="@CancelButtonClick"  />
                </div>
            </div>
        </RadzenTemplateForm>
    </div>

@code {

    protected override async Task OnInitializedAsync()
    {

        reservationsForRezervationID = await ZarenSoftService.GetReservations();
    }
    protected bool errorVisible;
    protected ZarenTravel.Models.ZarenSoft.ReservationDetail reservationDetail;

    protected IEnumerable<ZarenTravel.Models.ZarenSoft.Reservation> reservationsForRezervationID;

    protected async Task FormSubmit()
    {
        try
        {
            await ZarenSoftService.CreateReservationDetail(reservationDetail);
            DialogService.Close(reservationDetail);
        }
        catch (Exception ex)
        {
            errorVisible = true;
        }
    }

    protected async Task CancelButtonClick(MouseEventArgs args)
    {
        DialogService.Close(null);
    }





    bool hasRezervationIDValue;

    [Parameter]
    public int? RezervationID { get; set; }
    public override async Task SetParametersAsync(ParameterView parameters)
    {
        reservationDetail = new ZarenTravel.Models.ZarenSoft.ReservationDetail();

        hasRezervationIDValue = parameters.TryGetValue<int?>("RezervationID", out var hasRezervationIDResult);

        if (hasRezervationIDValue)
        {
            reservationDetail.RezervationID = hasRezervationIDResult;
        }
        await base.SetParametersAsync(parameters);
    }
}
