@page "/add-asp-net-user-claim"
@attribute [Authorize]
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService

@inject ZarenService ZarenService
@inject Microsoft.Extensions.Localization.IStringLocalizer<AddAspNetUserClaim> L

<PageTitle>Add AspNetUserClaim</PageTitle>
    <RadzenColumn SizeMD=12>
        <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">Cannot save AspNetUserClaim</RadzenAlert>
        <RadzenTemplateForm TItem="ZarenBO2.Models.Zaren.AspNetUserClaim" Data="@aspNetUserClaim" Visible="@(aspNetUserClaim != null && canEdit)" Submit="@FormSubmit">
            <RadzenRow style="margin-bottom: 1rem">
                <RadzenColumn SizeMD="3">
                    <RadzenLabel Text="Claim Type" Component="ClaimType" style="width: 100%" />
                </RadzenColumn>
                <RadzenColumn SizeMD="9">
                    <RadzenTextBox style="display: block; width: 100%" @bind-Value="@aspNetUserClaim.ClaimType" Name="ClaimType" />
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow style="margin-bottom: 1rem">
                <RadzenColumn SizeMD="3">
                    <RadzenLabel Text="Claim Value" Component="ClaimValue" style="width: 100%" />
                </RadzenColumn>
                <RadzenColumn SizeMD="9">
                    <RadzenTextBox style="display: block; width: 100%" @bind-Value="@aspNetUserClaim.ClaimValue" Name="ClaimValue" />
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow style="margin-bottom: 1rem">
                <RadzenColumn SizeMD="3">
                    <RadzenLabel Text="Asp Net User" Component="AspNetUser" style="width: 100%" />
                </RadzenColumn>
                <RadzenColumn SizeMD="9">
                    <RadzenDropDownDataGrid Data="@aspNetUsersForUserId" TextProperty="Id" ValueProperty="Id"
                         Placeholder="Choose AspNetUser" style="display: block; width: 100%" @bind-Value="@aspNetUserClaim.UserId" Name="UserId"
                           />
                </RadzenColumn>
            </RadzenRow>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                    <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Icon="save" Text="Save" Variant="Variant.Flat" />
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Variant="Variant.Flat" Click="@CancelButtonClick"  />
            </RadzenStack>
        </RadzenTemplateForm>
    </RadzenColumn>

@code {

    protected override async Task OnInitializedAsync()
    {
        aspNetUserClaim = new ZarenBO2.Models.Zaren.AspNetUserClaim();

        aspNetUsersForUserId = await ZarenService.GetAspNetUsers();
    }
    protected bool errorVisible;
    protected ZarenBO2.Models.Zaren.AspNetUserClaim aspNetUserClaim;

    protected IEnumerable<ZarenBO2.Models.Zaren.AspNetUser> aspNetUsersForUserId;

    protected async Task FormSubmit()
    {
        try
        {
            await ZarenService.CreateAspNetUserClaim(aspNetUserClaim);
            DialogService.Close(aspNetUserClaim);
        }
        catch (Exception ex)
        {
            hasChanges = ex is Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException;
            canEdit = !(ex is Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException);
            errorVisible = true;
        }
    }

    protected async Task CancelButtonClick(MouseEventArgs args)
    {
        DialogService.Close(null);
    }


    protected bool hasChanges = false;
    protected bool canEdit = true;

    [Inject]
    protected SecurityService Security { get; set; }
}
