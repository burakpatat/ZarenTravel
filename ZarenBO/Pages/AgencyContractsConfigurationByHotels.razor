@page "/agency-contracts-configuration-by-hotels"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService

@inject zaren_prodService zaren_prodService

<PageTitle>AgencyContractsConfigurationByHotels</PageTitle>
<div class="row" style="margin-bottom: 1rem">
    <div class="col-12 col-md-6">
        <RadzenText Text="AgencyContractsConfigurationByHotels" TextStyle="TextStyle.H3" TagName="TagName.H1" style="margin: 0" />
    </div>
    <div class="col-12 col-md-6 justify-content-start justify-content-md-end" style="display: flex; align-items: center; flex-wrap: wrap; gap: 0.5rem">
    <RadzenSplitButton Icon="get_app" style="margin-left: 10px; margin-bottom: 10px" Text="Export" Click="@ExportClick" Variant="Variant.Flat" Shade="Shade.Lighter">
        <RadzenSplitButtonItem Text="Excel" Value="xlsx" />
        <RadzenSplitButtonItem Text="CSV" Value="csv" />
    </RadzenSplitButton>
    </div>
</div>
<div class="row" style="margin-bottom: 1rem">
    <div class="col-12">
        <RadzenTextBox Placeholder="Search ..." style="display: block; width: 100%" @oninput="@Search" />
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <RadzenDataGrid @ref="grid0" ColumnWidth="200px"  AllowFiltering="true" FilterMode="FilterMode.Advanced" AllowPaging="true" AllowSorting="true"
            Data="@agencyContractsConfigurationByHotels"    TItem="ZarenTravelBO.Models.zaren_prod.AgencyContractsConfigurationByHotel" >
            <Columns>
                <RadzenDataGridColumn TItem="ZarenTravelBO.Models.zaren_prod.AgencyContractsConfigurationByHotel" Property="MicroSiteId" Title="Micro Site Id">
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="ZarenTravelBO.Models.zaren_prod.AgencyContractsConfigurationByHotel" Property="HotelConfigurationId" Title="Hotel Configuration Id">
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    </div>
</div>
@code {

    protected IEnumerable<ZarenTravelBO.Models.zaren_prod.AgencyContractsConfigurationByHotel> agencyContractsConfigurationByHotels;

    protected RadzenDataGrid<ZarenTravelBO.Models.zaren_prod.AgencyContractsConfigurationByHotel> grid0;

    protected string search = "";

    protected async Task Search(ChangeEventArgs args)
    {
        search = $"{args.Value}";

        await grid0.GoToPage(0);

        agencyContractsConfigurationByHotels = await zaren_prodService.GetAgencyContractsConfigurationByHotels();
    }
    protected override async Task OnInitializedAsync()
    {
        agencyContractsConfigurationByHotels = await zaren_prodService.GetAgencyContractsConfigurationByHotels();
    }

    protected async Task ExportClick(RadzenSplitButtonItem args)
    {
        if (args?.Value == "csv")
        {
            await zaren_prodService.ExportAgencyContractsConfigurationByHotelsToCSV(new Query
{ 
    Filter = $@"{(string.IsNullOrEmpty(grid0.Query.Filter)? "true" : grid0.Query.Filter)}", 
    OrderBy = $"{grid0.Query.OrderBy}", 
    Expand = "", 
    Select = string.Join(",", grid0.ColumnsCollection.Where(c => c.GetVisible()).Select(c => c.Property))
}, "AgencyContractsConfigurationByHotels");
        }

        if (args == null || args.Value == "xlsx")
        {
            await zaren_prodService.ExportAgencyContractsConfigurationByHotelsToExcel(new Query
{ 
    Filter = $@"{(string.IsNullOrEmpty(grid0.Query.Filter)? "true" : grid0.Query.Filter)}", 
    OrderBy = $"{grid0.Query.OrderBy}", 
    Expand = "", 
    Select = string.Join(",", grid0.ColumnsCollection.Where(c => c.GetVisible()).Select(c => c.Property))
}, "AgencyContractsConfigurationByHotels");
        }
    }
}
