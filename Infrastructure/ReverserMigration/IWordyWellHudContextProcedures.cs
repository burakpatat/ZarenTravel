// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Dapper;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Storage;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using WordyWellHero.Infrastructure.ReverserMigration;

namespace WordyWellHero.Infrastructure.ReverserMigration
{
    public partial interface IWordyWellHudContextProcedures
    {
        Task<int> AccountActionsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountActionsGetAllResult>> AccountActionsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountActionsGetByIDResult>> AccountActionsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountActionsInsertResult>> AccountActionsInsertAsync(string GoogleClientId, long? AccountId, long? PostId, long? ProfileId, string VisitedUrl, long? TagId, bool? OnProfile, string ClickedElements, string SessionId, string ReferalFrom, DateTime? EventDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountActionsUpdateResult>> AccountActionsUpdateAsync(long? Id, string GoogleClientId, long? AccountId, long? PostId, long? ProfileId, string VisitedUrl, long? TagId, bool? OnProfile, string ClickedElements, string SessionId, string ReferalFrom, DateTime? EventDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountBlockedCategoriesBlockUnBlockAsync(long? AccountId, long? CategoryId, OutputParameter<bool?> IsBlockedAllready, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountBlockedCategoriesDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedCategoriesGetAllResult>> AccountBlockedCategoriesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedCategoriesGetByIDResult>> AccountBlockedCategoriesGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedCategoriesInsertResult>> AccountBlockedCategoriesInsertAsync(long? AccountId, long? CategoryId, bool? IsBlockedAllready, DateTime? CreatedDate, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedCategoriesUpdateResult>> AccountBlockedCategoriesUpdateAsync(long? Id, long? AccountId, long? CategoryId, bool? IsBlockedAllready, DateTime? CreatedDate, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountBlockedPostsBlockUnBlockAsync(long? AccountId, long? PostId, OutputParameter<bool?> IsBlockedAllready, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountBlockedPostsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedPostsGetAllResult>> AccountBlockedPostsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedPostsGetByIDResult>> AccountBlockedPostsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedPostsInsertResult>> AccountBlockedPostsInsertAsync(long? PostId, long? AccountId, bool? IsBlockedAllready, DateTime? UpdatedDate, DateTime? CreatedDate, long? AuthorId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedPostsUpdateResult>> AccountBlockedPostsUpdateAsync(long? Id, long? PostId, long? AccountId, bool? IsBlockedAllready, DateTime? UpdatedDate, DateTime? CreatedDate, long? AuthorId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountBlockedProfilesBlockUnBlockAsync(long? AccountId, long? ProfileId, OutputParameter<bool?> IsBlockedAllready, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountBlockedProfilesDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedProfilesGetAllResult>> AccountBlockedProfilesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedProfilesGetByIDResult>> AccountBlockedProfilesGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedProfilesInsertResult>> AccountBlockedProfilesInsertAsync(long? ProfileId, long? AccountId, bool? IsBlockedAllready, DateTime? CreatedDate, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedProfilesUpdateResult>> AccountBlockedProfilesUpdateAsync(long? Id, long? ProfileId, long? AccountId, bool? IsBlockedAllready, DateTime? CreatedDate, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountBlockedTagsBlockUnBlockAsync(long? AccountId, long? TagId, OutputParameter<bool?> IsBlockedAllready, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountBlockedTagsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedTagsGetAllResult>> AccountBlockedTagsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedTagsGetByIDResult>> AccountBlockedTagsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedTagsInsertResult>> AccountBlockedTagsInsertAsync(long? TagId, long? AccountId, bool? IsBlockedAllReady, DateTime? UpdatedDate, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountBlockedTagsUpdateResult>> AccountBlockedTagsUpdateAsync(long? Id, long? TagId, long? AccountId, bool? IsBlockedAllReady, DateTime? UpdatedDate, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountCategoryDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountCategoryGetAllResult>> AccountCategoryGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountCategoryGetByIDResult>> AccountCategoryGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountCategoryInsertResult>> AccountCategoryInsertAsync(long? CategoryId, string Language, string Name, string Content, string Url, string Image, int? TableOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountCategoryUpdateResult>> AccountCategoryUpdateAsync(long? Id, long? CategoryId, string Language, string Name, string Content, string Url, string Image, int? TableOrder, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountCoordinatesDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountCoordinatesGetAllResult>> AccountCoordinatesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountCoordinatesGetByIDResult>> AccountCoordinatesGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountCoordinatesInsertResult>> AccountCoordinatesInsertAsync(long? AccountId, string Latitude, string Longitude, string TriggerEvent, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountCoordinatesUpdateResult>> AccountCoordinatesUpdateAsync(long? Id, long? AccountId, string Latitude, string Longitude, string TriggerEvent, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<(List<AccountDevicesControlResult1> Result1, List<AccountDevicesControlResult2> Result2)> AccountDevicesControlAsync(long? AccountId, string IP, string AccountAgent, string DeviceName, DateTime? CreatedDate, int? CountryId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountDevicesDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountDevicesGetAllResult>> AccountDevicesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountDevicesGetByIDResult>> AccountDevicesGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountDevicesInsertResult>> AccountDevicesInsertAsync(long? AccountId, string IP, string AccountAgent, string DeviceName, DateTime? CreatedDate, int? CountryId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountDevicesUpdateResult>> AccountDevicesUpdateAsync(long? Id, long? AccountId, string IP, string AccountAgent, string DeviceName, DateTime? CreatedDate, int? CountryId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountErrorsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountErrorsGetAllResult>> AccountErrorsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountErrorsGetByIDResult>> AccountErrorsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountErrorsInsertResult>> AccountErrorsInsertAsync(long? AccountId, DateTime? EventDate, string ErrorUrl, string ErrorCode, string ErrorDescription, string IP, string AccountAgent, int? ErrorType, string Language, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountErrorsUpdateResult>> AccountErrorsUpdateAsync(long? Id, long? AccountId, DateTime? EventDate, string ErrorUrl, string ErrorCode, string ErrorDescription, string IP, string AccountAgent, int? ErrorType, string Language, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountFollowedCategoriesDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountFollowedCategoriesFollowUnFollowAsync(long? AccountId, int? CategoryId, OutputParameter<bool?> IsFollowedAllReady, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedCategoriesGetAllResult>> AccountFollowedCategoriesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedCategoriesGetByIDResult>> AccountFollowedCategoriesGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedCategoriesInsertResult>> AccountFollowedCategoriesInsertAsync(long? AccountId, long? CategoryId, DateTime? CreatedDate, bool? IsFollowedAllReady, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedCategoriesRecommendedProfileResult>> AccountFollowedCategoriesRecommendedProfileAsync(long? AccountId, string Language, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedCategoriesUpdateResult>> AccountFollowedCategoriesUpdateAsync(long? Id, long? AccountId, long? CategoryId, DateTime? CreatedDate, bool? IsFollowedAllReady, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountFollowedPostsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedPostsGetAllResult>> AccountFollowedPostsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedPostsGetByIDResult>> AccountFollowedPostsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedPostsInsertResult>> AccountFollowedPostsInsertAsync(long? AccountId, long? PostId, DateTime? CreatedDate, long? ProfileId, bool? IsLikedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountFollowedPostsLikeUnlikeAsync(long? AccountId, long? PostId, OutputParameter<bool?> IsLikedAllready, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedPostsUpdateResult>> AccountFollowedPostsUpdateAsync(long? Id, long? AccountId, long? PostId, DateTime? CreatedDate, long? ProfileId, bool? IsLikedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountFollowedProfilesDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountFollowedProfilesFollowUnFollowAsync(long? AccountId, long? ProfileId, OutputParameter<bool?> IsFollowedAllReady, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedProfilesGetAllResult>> AccountFollowedProfilesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedProfilesGetByIDResult>> AccountFollowedProfilesGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedProfilesInsertResult>> AccountFollowedProfilesInsertAsync(long? AccountId, long? ProfileId, DateTime? CreatedDate, bool? IsFollowedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedProfilesRecommendedProfileResult>> AccountFollowedProfilesRecommendedProfileAsync(long? AccountId, string Language, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedProfilesUpdateResult>> AccountFollowedProfilesUpdateAsync(long? Id, long? AccountId, long? ProfileId, DateTime? CreatedDate, bool? IsFollowedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountFollowedTagsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountFollowedTagsFollowUnFollowAsync(long? AccountId, long? TagId, OutputParameter<bool?> IsFollowedAllReady, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedTagsGetAllResult>> AccountFollowedTagsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedTagsGetByIDResult>> AccountFollowedTagsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedTagsInsertResult>> AccountFollowedTagsInsertAsync(long? AccountId, long? TagId, DateTime? CreatedDate, bool? IsFollowedAllReady, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountFollowedTagsUpdateResult>> AccountFollowedTagsUpdateAsync(long? Id, long? AccountId, long? TagId, DateTime? CreatedDate, bool? IsFollowedAllReady, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountGoalResultsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountGoalResultsGetAllResult>> AccountGoalResultsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountGoalResultsGetByIDResult>> AccountGoalResultsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountGoalResultsInsertResult>> AccountGoalResultsInsertAsync(long? AccountId, int? GoalId, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountGoalResultsUpdateResult>> AccountGoalResultsUpdateAsync(long? Id, long? AccountId, int? GoalId, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountGoalsDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountGoalsGetAllResult>> AccountGoalsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountGoalsGetByIDResult>> AccountGoalsGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountGoalsInsertResult>> AccountGoalsInsertAsync(string EventName, string EventRule, string Language, string EventNameJSON, int? CountryId, int? PricePoint, bool? IsActive, DateTime? StartedDate, DateTime? EndDate, int? TableOrder, string Image, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountGoalsUpdateResult>> AccountGoalsUpdateAsync(int? Id, string EventName, string EventRule, string Language, string EventNameJSON, int? CountryId, int? PricePoint, bool? IsActive, DateTime? StartedDate, DateTime? EndDate, int? TableOrder, string Image, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountLikedPostsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountLikedPostsForAccountResult>> AccountLikedPostsForAccountAsync(long? AccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountLikedPostsGetAllResult>> AccountLikedPostsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountLikedPostsGetByIDResult>> AccountLikedPostsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountLikedPostsInsertResult>> AccountLikedPostsInsertAsync(long? AccountId, long? PostId, DateTime? CreatedDate, long? AuthorId, bool? IsLikedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountLikedPostsLikeUnlikeAsync(long? AccountId, long? PostId, OutputParameter<bool?> IsLikedAllready, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountLikedPostsUpdateResult>> AccountLikedPostsUpdateAsync(long? Id, long? AccountId, long? PostId, DateTime? CreatedDate, long? AuthorId, bool? IsLikedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountLoginsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountLoginsGetAllResult>> AccountLoginsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountLoginsGetByIDResult>> AccountLoginsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountLoginsInsertResult>> AccountLoginsInsertAsync(long? AccountId, DateTime? CreatedDate, string AccountAgent, string Token, bool? IsSuccessfull, string IPAddress, DateTime? ExpiresIn, string Language, long? AccountDeviceId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountLoginsUpdateResult>> AccountLoginsUpdateAsync(long? Id, long? AccountId, DateTime? CreatedDate, string AccountAgent, string Token, bool? IsSuccessfull, string IPAddress, DateTime? ExpiresIn, string Language, long? AccountDeviceId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountNewsletterInfoDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountNewsletterInfoGetAllResult>> AccountNewsletterInfoGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountNewsletterInfoGetByIDResult>> AccountNewsletterInfoGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountNewsletterInfoInsertResult>> AccountNewsletterInfoInsertAsync(long? AccountId, int? MailFrequency, int? NotifyType, string NewsletterMail, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountNewsletterInfoUpdateResult>> AccountNewsletterInfoUpdateAsync(int? Id, long? AccountId, int? MailFrequency, int? NotifyType, string NewsletterMail, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountProfileEncryptedCheckAsync(string Email, OutputParameter<bool?> Result, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountProfileEncryptedDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileEncryptedEditResult>> AccountProfileEncryptedEditAsync(string Password, DateTime? Birthday, string PhoneNumber, string Email, int? Currency, string GoogleId, string AppleId, int? CountryId, long? AccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileEncryptedGetAllResult>> AccountProfileEncryptedGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileEncryptedGetByIDResult>> AccountProfileEncryptedGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileEncryptedInsertResult>> AccountProfileEncryptedInsertAsync(long? AccountId, string Password, DateTime? Birthday, string PhoneNumber, string Email, int? Currency, string GoogleId, string AppleId, int? CountryId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileEncryptedUpdateResult>> AccountProfileEncryptedUpdateAsync(long? Id, long? AccountId, string Password, DateTime? Birthday, string PhoneNumber, string Email, int? Currency, string GoogleId, string AppleId, int? CountryId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountProfileInfoDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileInfoGetAllResult>> AccountProfileInfoGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileInfoGetByIDResult>> AccountProfileInfoGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileInfoInsertResult>> AccountProfileInfoInsertAsync(long? AccountId, string PersonelInfo, string Location, string Website, string CoverImage, DateTime? CreatedDate, bool? HasSentNotifyOnComment, string Language, string Title, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileInfoUpdateResult>> AccountProfileInfoUpdateAsync(long? Id, long? AccountId, string PersonelInfo, string Location, string Website, string CoverImage, DateTime? CreatedDate, bool? HasSentNotifyOnComment, string Language, string Title, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountProfilePaymentInfoEncryptedDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfilePaymentInfoEncryptedGetAllResult>> AccountProfilePaymentInfoEncryptedGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfilePaymentInfoEncryptedGetByIDResult>> AccountProfilePaymentInfoEncryptedGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfilePaymentInfoEncryptedInsertResult>> AccountProfilePaymentInfoEncryptedInsertAsync(long? AccountId, string BankName, int? TransferType, int? Country, string AccountInfo, string WalletAddress, decimal? Commission, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfilePaymentInfoEncryptedUpdateResult>> AccountProfilePaymentInfoEncryptedUpdateAsync(long? Id, long? AccountId, string BankName, int? TransferType, int? Country, string AccountInfo, string WalletAddress, decimal? Commission, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountProfilePinnedDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfilePinnedGetAllResult>> AccountProfilePinnedGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfilePinnedGetByIDResult>> AccountProfilePinnedGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfilePinnedInsertResult>> AccountProfilePinnedInsertAsync(long? PostId, long? AccountId, int? TableOrder, DateTime? CreatedDate, bool? IsPinnedAllready, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfilePinnedUpdateResult>> AccountProfilePinnedUpdateAsync(long? Id, long? PostId, long? AccountId, int? TableOrder, DateTime? CreatedDate, bool? IsPinnedAllready, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountProfileSavedPostsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileSavedPostsGetAllResult>> AccountProfileSavedPostsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileSavedPostsGetByIDResult>> AccountProfileSavedPostsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileSavedPostsInsertResult>> AccountProfileSavedPostsInsertAsync(long? AccountId, bool? IsRead, long? PostId, long? AuthorId, DateTime? CreatedDate, bool? IsSavedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileSavedPostsUpdateResult>> AccountProfileSavedPostsUpdateAsync(long? Id, long? AccountId, bool? IsRead, long? PostId, long? AuthorId, DateTime? CreatedDate, bool? IsSavedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountProfileStatisticsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileStatisticsGetAllResult>> AccountProfileStatisticsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileStatisticsGetByIDResult>> AccountProfileStatisticsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileStatisticsInsertResult>> AccountProfileStatisticsInsertAsync(long? AccountId, long? ProfileViewCount, long? PostViewCount, long? FollowCount, long? FollowerCount, long? CommentCount, long? PostLikedCount, long? PostBlockedCount, long? ProfileBlockedCount, DateTime? LastScanDate, int? PostCountThisWeek, int? FollowerCountThisWeek, long? ViewCountThisWeek, string EarningThisMounth, long? PostDisLikedCount, int? PostSavedCount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileStatisticsSyncResult>> AccountProfileStatisticsSyncAsync(long? AccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileStatisticsUpdateResult>> AccountProfileStatisticsUpdateAsync(long? Id, long? AccountId, long? ProfileViewCount, long? PostViewCount, long? FollowCount, long? FollowerCount, long? CommentCount, long? PostLikedCount, long? PostBlockedCount, long? ProfileBlockedCount, DateTime? LastScanDate, int? PostCountThisWeek, int? FollowerCountThisWeek, long? ViewCountThisWeek, string EarningThisMounth, long? PostDisLikedCount, int? PostSavedCount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountProfileStyleDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileStyleGetAllResult>> AccountProfileStyleGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileStyleGetByIDResult>> AccountProfileStyleGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileStyleInsertResult>> AccountProfileStyleInsertAsync(long? AccountId, string FontSizeOnArticle, string GridSize, string BackgroudColor, bool? IsLTR, string H1Style, string UrlStyle, bool? HideAdvertorial, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileStyleUpdateResult>> AccountProfileStyleUpdateAsync(long? Id, long? AccountId, string FontSizeOnArticle, string GridSize, string BackgroudColor, bool? IsLTR, string H1Style, string UrlStyle, bool? HideAdvertorial, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountProfileTop10DeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileTop10GetAllResult>> AccountProfileTop10GetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileTop10GetByIDResult>> AccountProfileTop10GetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileTop10InsertResult>> AccountProfileTop10InsertAsync(long? AccountId, long? PostId, long? ProfileId, DateTime? CreatedDate, bool? IsSavedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountProfileTop10UpdateResult>> AccountProfileTop10UpdateAsync(long? Id, long? AccountId, long? PostId, long? ProfileId, DateTime? CreatedDate, bool? IsSavedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsDetailGetAllResult>> AccountsDetailGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsDetailGetByIDResult>> AccountsDetailGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountSearchHistoryDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountSearchHistoryGetAllResult>> AccountSearchHistoryGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountSearchHistoryGetByIDResult>> AccountSearchHistoryGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountSearchHistoryInsertResult>> AccountSearchHistoryInsertAsync(long? AccountId, string Key, string Location, DateTime? CreatedDate, string Language, long? AccountDeviceId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountSearchHistoryUpdateResult>> AccountSearchHistoryUpdateAsync(long? Id, long? AccountId, string Key, string Location, DateTime? CreatedDate, string Language, long? AccountDeviceId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<(List<AccountsFeedResult1> Result1, List<AccountsFeedResult2> Result2)> AccountsFeedAsync(long? AccountId, string Language, int? PostType, int? Top, long? LastPostId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsGetAllResult>> AccountsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsGetByIDResult>> AccountsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsHeaderPostsResult>> AccountsHeaderPostsAsync(long? AccountId, string Language, int? PostType, int? Top, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsInsertResult>> AccountsInsertAsync(string Name, string Surname, string AccountIcon, string AccountName, bool? IsVerified, string Language, bool? IsDeleted, Guid? Guid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsLoginWithAccountNameResult>> AccountsLoginWithAccountNameAsync(string AccountName, string Password, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsLoginWithAppleIdResult>> AccountsLoginWithAppleIdAsync(string AppleId, string Email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsLoginWithGoogleResult>> AccountsLoginWithGoogleAsync(string GoogleId, string Email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsLoginWithMailResult>> AccountsLoginWithMailAsync(string Email, string Password, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsLoginWithPhoneResult>> AccountsLoginWithPhoneAsync(string PhoneNumber, string Password, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsMeResult>> AccountsMeAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsPasswordReminderWithAccountNameResult>> AccountsPasswordReminderWithAccountNameAsync(string AccountName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsPasswordReminderWithEmailResult>> AccountsPasswordReminderWithEmailAsync(string Email, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsPasswordReminderWithPhoneNumberResult>> AccountsPasswordReminderWithPhoneNumberAsync(string PhoneNumber, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsProfileAdvertorialResult>> AccountsProfileAdvertorialAsync(int? AdvertorialPositionId, string Language, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsProfileFollowerOfferListResult>> AccountsProfileFollowerOfferListAsync(long? AccountId, long? ProfileId, string Language, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsRecommendedCategoriesForMeResult>> AccountsRecommendedCategoriesForMeAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsRecommendedTagsForMeResult>> AccountsRecommendedTagsForMeAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<(List<AccountsRegisterResult1> Result1, List<AccountsRegisterResult2> Result2, List<AccountsRegisterResult3> Result3)> AccountsRegisterAsync(string AccountName, string Email, string Password, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<(List<AccountsSyncResult1> Result1, List<AccountsSyncResult2> Result2)> AccountsSyncAsync(long? AccountId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountsUpdateResult>> AccountsUpdateAsync(long? Id, string Name, string Surname, string AccountIcon, string AccountName, bool? IsVerified, string Language, bool? IsDeleted, Guid? Guid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountTokensDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountTokensGetAllResult>> AccountTokensGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountTokensGetByIDResult>> AccountTokensGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountTokensInsertResult>> AccountTokensInsertAsync(long? AccountId, string ClientId, string SecretKey, string Token, DateTime? CreatedDate, DateTime? ExpirationDate, string AccountAgent, string IP, long? AccountDeviceId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountTokensUpdateResult>> AccountTokensUpdateAsync(long? Id, long? AccountId, string ClientId, string SecretKey, string Token, DateTime? CreatedDate, DateTime? ExpirationDate, string AccountAgent, string IP, long? AccountDeviceId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountWalletEventsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountWalletEventsGetAllResult>> AccountWalletEventsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountWalletEventsGetByIDResult>> AccountWalletEventsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountWalletEventsInsertResult>> AccountWalletEventsInsertAsync(long? AccountId, DateTime? EventDate, decimal? EarningPrice, long? PostId, int? CurrencyType, string Url, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountWalletEventsUpdateResult>> AccountWalletEventsUpdateAsync(long? Id, long? AccountId, DateTime? EventDate, decimal? EarningPrice, long? PostId, int? CurrencyType, string Url, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountWalletRequestsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountWalletRequestsGetAllResult>> AccountWalletRequestsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountWalletRequestsGetByIDResult>> AccountWalletRequestsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountWalletRequestsInsertResult>> AccountWalletRequestsInsertAsync(long? AccountId, DateTime? RequestDate, int? TransferType, int? CountryId, decimal? RequestedAmount, decimal? CommissionRate, bool? SendNotification, bool? HasCompleted, DateTime? CompletedDate, int? RequestedAmountCurrency, string GoogleClientId, string IPAddress, string SessionInfo, string AccountAgent, long? AccountDeviceId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountWalletRequestsUpdateResult>> AccountWalletRequestsUpdateAsync(long? Id, long? AccountId, DateTime? RequestDate, int? TransferType, int? CountryId, decimal? RequestedAmount, decimal? CommissionRate, bool? SendNotification, bool? HasCompleted, DateTime? CompletedDate, int? RequestedAmountCurrency, string GoogleClientId, string IPAddress, string SessionInfo, string AccountAgent, long? AccountDeviceId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AccountWalletsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountWalletsGetAllResult>> AccountWalletsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountWalletsGetByIDResult>> AccountWalletsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountWalletsInsertResult>> AccountWalletsInsertAsync(long? AccountId, decimal? CurrentTotal, DateTime? TransactionDate, int? TransactionType, int? CurrencyType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AccountWalletsUpdateResult>> AccountWalletsUpdateAsync(long? Id, long? AccountId, decimal? CurrentTotal, DateTime? TransactionDate, int? TransactionType, int? CurrencyType, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ActivisionCodesDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ActivisionCodesGetAllResult>> ActivisionCodesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ActivisionCodesGetByIDResult>> ActivisionCodesGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ActivisionCodesInsertResult>> ActivisionCodesInsertAsync(string ActivisionCode, long? AccountId, DateTime? LastValidDate, DateTime? CreatedDate, bool? IsApproved, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ActivisionCodesUpdateResult>> ActivisionCodesUpdateAsync(long? Id, string ActivisionCode, long? AccountId, DateTime? LastValidDate, DateTime? CreatedDate, bool? IsApproved, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AdminIPsDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdminIPsGetAllResult>> AdminIPsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdminIPsGetByIDResult>> AdminIPsGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdminIPsInsertResult>> AdminIPsInsertAsync(string IP, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdminIPsUpdateResult>> AdminIPsUpdateAsync(int? Id, string IP, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AdvertorialPositionsDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdvertorialPositionsGetAllResult>> AdvertorialPositionsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdvertorialPositionsGetByIDResult>> AdvertorialPositionsGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdvertorialPositionsInsertResult>> AdvertorialPositionsInsertAsync(string Name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdvertorialPositionsUpdateResult>> AdvertorialPositionsUpdateAsync(int? Id, string Name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AdvertorialsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdvertorialsGetAllResult>> AdvertorialsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdvertorialsGetByIDResult>> AdvertorialsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdvertorialsInsertResult>> AdvertorialsInsertAsync(string Name, int? AdvertorialTypeId, int? AdvertorialPositionId, string AdvImg, string AdvContent, string ButtonText, string Language, int? TableOrder, string Url, string Image, string Width, string Height, string InlineStyles, string InlineScripts, DateTime? StartDate, DateTime? FinishDate, bool? IsActive, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdvertorialsUpdateResult>> AdvertorialsUpdateAsync(long? Id, string Name, int? AdvertorialTypeId, int? AdvertorialPositionId, string AdvImg, string AdvContent, string ButtonText, string Language, int? TableOrder, string Url, string Image, string Width, string Height, string InlineStyles, string InlineScripts, DateTime? StartDate, DateTime? FinishDate, bool? IsActive, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AdvertorialTypesDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdvertorialTypesGetAllResult>> AdvertorialTypesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdvertorialTypesGetByIDResult>> AdvertorialTypesGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdvertorialTypesInsertResult>> AdvertorialTypesInsertAsync(string Name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AdvertorialTypesUpdateResult>> AdvertorialTypesUpdateAsync(int? Id, string Name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AspNetRoleClaimsDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetRoleClaimsGetAllResult>> AspNetRoleClaimsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetRoleClaimsGetByIDResult>> AspNetRoleClaimsGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetRoleClaimsInsertResult>> AspNetRoleClaimsInsertAsync(string RoleId, string ClaimType, string ClaimValue, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetRoleClaimsUpdateResult>> AspNetRoleClaimsUpdateAsync(int? Id, string RoleId, string ClaimType, string ClaimValue, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AspNetRolesDeleteAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetRolesGetAllResult>> AspNetRolesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetRolesGetByIDResult>> AspNetRolesGetByIDAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetRolesInsertResult>> AspNetRolesInsertAsync(string Name, string NormalizedName, string ConcurrencyStamp, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetRolesUpdateResult>> AspNetRolesUpdateAsync(string Id, string Name, string NormalizedName, string ConcurrencyStamp, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AspNetUserClaimsDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUserClaimsGetAllResult>> AspNetUserClaimsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUserClaimsGetByIDResult>> AspNetUserClaimsGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUserClaimsInsertResult>> AspNetUserClaimsInsertAsync(string UserId, string ClaimType, string ClaimValue, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUserClaimsUpdateResult>> AspNetUserClaimsUpdateAsync(int? Id, string UserId, string ClaimType, string ClaimValue, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AspNetUserLoginsDeleteAsync(string LoginProvider, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUserLoginsGetAllResult>> AspNetUserLoginsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUserLoginsGetByIDResult>> AspNetUserLoginsGetByIDAsync(string LoginProvider, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUserLoginsInsertResult>> AspNetUserLoginsInsertAsync(string ProviderKey, string ProviderDisplayName, string UserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUserLoginsUpdateResult>> AspNetUserLoginsUpdateAsync(string LoginProvider, string ProviderKey, string ProviderDisplayName, string UserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUserRolesInsertResult>> AspNetUserRolesInsertAsync(string RoleId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AspNetUsersDeleteAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUsersGetAllResult>> AspNetUsersGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUsersGetByIDResult>> AspNetUsersGetByIDAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUsersInsertResult>> AspNetUsersInsertAsync(string UserName, string NormalizedUserName, string Email, string NormalizedEmail, bool? EmailConfirmed, string PasswordHash, string SecurityStamp, string ConcurrencyStamp, string PhoneNumber, bool? PhoneNumberConfirmed, bool? TwoFactorEnabled, DateTimeOffset? LockoutEnd, bool? LockoutEnabled, int? AccessFailedCount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUsersUpdateResult>> AspNetUsersUpdateAsync(string Id, string UserName, string NormalizedUserName, string Email, string NormalizedEmail, bool? EmailConfirmed, string PasswordHash, string SecurityStamp, string ConcurrencyStamp, string PhoneNumber, bool? PhoneNumberConfirmed, bool? TwoFactorEnabled, DateTimeOffset? LockoutEnd, bool? LockoutEnabled, int? AccessFailedCount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AspNetUserTokensDeleteAsync(string UserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUserTokensGetAllResult>> AspNetUserTokensGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUserTokensGetByIDResult>> AspNetUserTokensGetByIDAsync(string UserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUserTokensInsertResult>> AspNetUserTokensInsertAsync(string LoginProvider, string Name, string Value, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AspNetUserTokensUpdateResult>> AspNetUserTokensUpdateAsync(string UserId, string LoginProvider, string Name, string Value, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> BannedWordsDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BannedWordsGetAllResult>> BannedWordsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BannedWordsGetByIDResult>> BannedWordsGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BannedWordsInsertResult>> BannedWordsInsertAsync(string Word, string Language, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BannedWordsUpdateResult>> BannedWordsUpdateAsync(int? Id, string Word, string Language, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> BlockedIPsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BlockedIPsGetAllResult>> BlockedIPsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BlockedIPsGetByIDResult>> BlockedIPsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BlockedIPsInsertResult>> BlockedIPsInsertAsync(string IPAddress, string AccountAgent, string Location, long? ReferalAccountId, int? BlockedTypeId, bool? IsBlockedAllready, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BlockedIPsUpdateResult>> BlockedIPsUpdateAsync(long? Id, string IPAddress, string AccountAgent, string Location, long? ReferalAccountId, int? BlockedTypeId, bool? IsBlockedAllready, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> BlockedTypesDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BlockedTypesGetAllResult>> BlockedTypesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BlockedTypesGetByIDResult>> BlockedTypesGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BlockedTypesInsertResult>> BlockedTypesInsertAsync(string Name, string NameLanguageJSON, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<BlockedTypesUpdateResult>> BlockedTypesUpdateAsync(int? Id, string Name, string NameLanguageJSON, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ChatHistoryDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ChatHistoryGetAllResult>> ChatHistoryGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ChatHistoryGetByIDResult>> ChatHistoryGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ChatHistoryInsertResult>> ChatHistoryInsertAsync(string FromUserId, string ToUserId, string Message, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ChatHistoryUpdateResult>> ChatHistoryUpdateAsync(long? Id, string FromUserId, string ToUserId, string Message, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CityDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CityGetAllResult>> CityGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CityGetByIDResult>> CityGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CityInsertResult>> CityInsertAsync(string Name, string NameJSON, int? CountryId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CityUpdateResult>> CityUpdateAsync(int? Id, string Name, string NameJSON, int? CountryId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ContentAccordionsDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ContentAccordionsGetAllResult>> ContentAccordionsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ContentAccordionsGetByIDResult>> ContentAccordionsGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ContentAccordionsInsertResult>> ContentAccordionsInsertAsync(int? ContentId, bool? IsPublished, string Language, int? TableOrder, string Answer, string Question, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ContentAccordionsUpdateResult>> ContentAccordionsUpdateAsync(int? Id, int? ContentId, bool? IsPublished, string Language, int? TableOrder, string Answer, string Question, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ContentsDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ContentsGetAllResult>> ContentsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ContentsGetByIDResult>> ContentsGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ContentsInsertResult>> ContentsInsertAsync(string Language, bool? WillOutOfSite, string RedirectUrl, string GroupName, int? Positions, string PageContent, string PageContentJSON, string PageTitle, string PageTitleJSON, int? TableOrder, int? ParentId, string Url, bool? IsAccessible, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ContentsUpdateResult>> ContentsUpdateAsync(int? Id, string Language, bool? WillOutOfSite, string RedirectUrl, string GroupName, int? Positions, string PageContent, string PageContentJSON, string PageTitle, string PageTitleJSON, int? TableOrder, int? ParentId, string Url, bool? IsAccessible, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ContinentDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ContinentGetAllResult>> ContinentGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ContinentGetByIDResult>> ContinentGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ContinentInsertResult>> ContinentInsertAsync(string Name, string PreferredLanguages, string NameJSON, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ContinentUpdateResult>> ContinentUpdateAsync(int? Id, string Name, string PreferredLanguages, string NameJSON, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CountryDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CountryGetAllResult>> CountryGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CountryGetByIDResult>> CountryGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CountryInsertResult>> CountryInsertAsync(string ShortName, string Name, int? PreferredLanguage, string NameJSON, int? ContinentId, string CoordinateRange, int? Capital, string PreferredLanguageStr, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CountryUpdateResult>> CountryUpdateAsync(int? Id, string ShortName, string Name, int? PreferredLanguage, string NameJSON, int? ContinentId, string CoordinateRange, int? Capital, string PreferredLanguageStr, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DistributedServerCacheGetAllResult>> DistributedServerCacheGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DistributedServerCacheGetByIDResult>> DistributedServerCacheGetByIDAsync(string Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DistributedServerCacheInsertResult>> DistributedServerCacheInsertAsync(byte[] Value, DateTimeOffset? ExpiresAtTime, long? SlidingExpirationInSeconds, DateTimeOffset? AbsoluteExpiration, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DistributedServerCachePagerByAscResult>> DistributedServerCachePagerByAscAsync(int? PageSize, int? PageNum, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DistributedServerCachePagerByDescResult>> DistributedServerCachePagerByDescAsync(int? PageSize, int? PageNum, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DistributedServerCacheUpdateResult>> DistributedServerCacheUpdateAsync(string Id, byte[] Value, DateTimeOffset? ExpiresAtTime, long? SlidingExpirationInSeconds, DateTimeOffset? AbsoluteExpiration, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DynamicBackupAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicCachedPagesResult>> DynamicCachedPagesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DynamicCursorAsync(string name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DynamicJsonDboAsync(string json, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DynamicJsonGenAsync(string json, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicQueryResult>> DynamicQueryAsync(string Query, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicQueueListResult>> DynamicQueueListAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicSpaceReportResult>> DynamicSpaceReportAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DynamicstatisticsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTableDboResult>> DynamicTableDboAsync(bool? AllColumns, bool? SelectTop, bool? GetCount, bool? HasWhere, bool? HasOrder, bool? HasGroupBy, bool? HasHaving, bool? HasDirect, bool? LeftJoin, string LeftJoinTable, string LeftJoinTableSelectColumn, bool? RightJoin, string RightJoinTable, string RightJoinTableSelectColumn, bool? InnerJoin, string InnerJoinTable, string InnerJoinTableSelectColumn, string Table, string ColumnNames, string PrimaryKey, int? SelectTopCount, string OrderColumn, string GroupByColumn, string JoinTable, string WhereClause, string HavingClause, string DirectQuery, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTableGenResult>> DynamicTableGenAsync(bool? AllColumns, bool? SelectTop, bool? GetCount, bool? HasWhere, bool? HasOrder, bool? HasGroupBy, bool? HasHaving, bool? HasDirect, bool? LeftJoin, string LeftJoinTable, string LeftJoinTableSelectColumn, bool? RightJoin, string RightJoinTable, string RightJoinTableSelectColumn, bool? InnerJoin, string InnerJoinTable, string InnerJoinTableSelectColumn, string Table, string ColumnNames, string PrimaryKey, int? SelectTopCount, string OrderColumn, string GroupByColumn, string JoinTable, string WhereClause, string HavingClause, string DirectQuery, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTableCountGenResult>> DynamicTableCountGenAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTableCountDboResult>> DynamicTableCountDboAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTableForeignKeysDboResult>> DynamicTableForeignKeysDboAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTableForeignKeysGenResult>> DynamicTableForeignKeysGenAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTablePagerGenResult>> DynamicTablePagerGenAsync(int? PageSize, int? PageNum, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTablePagerDboResult>> DynamicTablePagerDboAsync(int? PageSize, int? PageNum, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTableReportDboResult>> DynamicTableReportDboAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTableReportGenResult>> DynamicTableReportGenAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTableRowResult>> DynamicTableRowAsync(string table, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DynamicTableSearchDboAsync(string Query, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DynamicTableSearchGenAsync(string Query, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTableSearchAllGenResult>> DynamicTableSearchAllGenAsync(string SearchStr, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTableSearchAllDboResult>> DynamicTableSearchAllDboAsync(string SearchStr, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicTransactionReportResult>> DynamicTransactionReportAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<(List<DynamicUpsertResult1> Result1, List<DynamicUpsertResult2> Result2, List<DynamicUpsertResult3> Result3)> DynamicUpsertAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicViewDTOGenResult>> DynamicViewDTOGenAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicViewDTODboResult>> DynamicViewDTODboAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicViewReportGenResult>> DynamicViewReportGenAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DynamicViewReportDboResult>> DynamicViewReportDboAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ErrorInfoResult>> ErrorInfoAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAccessControlResult>> GetAccessControlAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetColumnsResult>> GetColumnsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetColumnsWithOutIdentityResult>> GetColumnsWithOutIdentityAsync(string name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetDependenciesResult>> GetDependenciesAsync(string Schema, string Table, string Column, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetExtendedResult>> GetExtendedAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> GetExtendedInsertAsync(string pname, string pvalue, string plevel1name, string plevel2name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> GetExtendedRemoveAsync(string pname, string plevel1name, string plevel2name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetIdentityListResult>> GetIdentityListAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetIndexStatsResult>> GetIndexStatsAsync(string table_name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetModifyDateResult>> GetModifyDateAsync(string name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetParameterNamesResult>> GetParameterNamesAsync(string Procedure, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetProcedureNamesResult>> GetProcedureNamesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetRequestParameterNamesResult>> GetRequestParameterNamesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetReturnParameterNamesResult>> GetReturnParameterNamesAsync(string ProcedureName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetSearchWithListResult>> GetSearchWithListAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetServerInfoResult>> GetServerInfoAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetSpLogsResult>> GetSpLogsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetTableColumnsResult>> GetTableColumnsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetTableFKResult>> GetTableFKAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<(List<GetTableInfoResult1> Result1, List<GetTableInfoResult2> Result2)> GetTableInfoAsync(string TableName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetTableNamesResult>> GetTableNamesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetTablesResult>> GetTablesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetTableSizeResult>> GetTableSizeAsync(string TableName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetViewBackupHistoryResult>> GetViewBackupHistoryAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetViewListResult>> GetViewListAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LanguageByCodeResult>> LanguageByCodeAsync(string UiCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> LanguageDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LanguageGetAllResult>> LanguageGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LanguageGetByIDResult>> LanguageGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LanguageInsertResult>> LanguageInsertAsync(string Name, string ShortCode, int? TableOrder, string Settings, string Culture, string FlagICON, string NameJSON, string UiCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<LanguageUpdateResult>> LanguageUpdateAsync(int? Id, string Name, string ShortCode, int? TableOrder, string Settings, string Culture, string FlagICON, string NameJSON, string UiCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Log_ProcedureCallAsync(int? ObjectID, int? DatabaseID, string AdditionalInfo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> MessagesDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<MessagesGetAllResult>> MessagesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<MessagesGetByIDResult>> MessagesGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<MessagesInsertResult>> MessagesInsertAsync(long? AccountId, long? ToAccountId, string Message, bool? IsRead, string ContentSource, int? ContentType, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<MessagesUpdateResult>> MessagesUpdateAsync(long? Id, long? AccountId, long? ToAccountId, string Message, bool? IsRead, string ContentSource, int? ContentType, DateTime? CreatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> NotificationPlansDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationPlansGetAllResult>> NotificationPlansGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationPlansGetByIDResult>> NotificationPlansGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationPlansInsertResult>> NotificationPlansInsertAsync(long? AccountId, long? TriggerAuthorId, int? AuthorActionId, DateTime? CreatedDate, bool? IsActive, string PreferredNotifyTypes, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationPlansUpdateResult>> NotificationPlansUpdateAsync(long? Id, long? AccountId, long? TriggerAuthorId, int? AuthorActionId, DateTime? CreatedDate, bool? IsActive, string PreferredNotifyTypes, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> NotificationsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationsGetAllResult>> NotificationsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationsGetByIDResult>> NotificationsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationsInsertResult>> NotificationsInsertAsync(long? AccountId, bool? IsRead, string Message, int? NotifyType, DateTime? CreatedDate, bool? ToAll, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationsUpdateResult>> NotificationsUpdateAsync(long? Id, long? AccountId, bool? IsRead, string Message, int? NotifyType, DateTime? CreatedDate, bool? ToAll, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> NotificationTemplatesDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationTemplatesGetAllResult>> NotificationTemplatesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationTemplatesGetByIDResult>> NotificationTemplatesGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationTemplatesInsertResult>> NotificationTemplatesInsertAsync(string ReplacedTags, string Template, string Name, int? LanguageId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<NotificationTemplatesUpdateResult>> NotificationTemplatesUpdateAsync(int? Id, string ReplacedTags, string Template, string Name, int? LanguageId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PostCategoryDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostCategoryGetAllResult>> PostCategoryGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostCategoryGetByIDResult>> PostCategoryGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostCategoryInsertResult>> PostCategoryInsertAsync(int? CategoryId, string Language, string Name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostCategoryUpdateResult>> PostCategoryUpdateAsync(int? Id, int? CategoryId, string Language, string Name, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<(List<PostsByCategoryByLangResult1> Result1, List<PostsByCategoryByLangResult2> Result2)> PostsByCategoryByLangAsync(int? CategoryId, string Language, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostsByTagByLangResult>> PostsByTagByLangAsync(int? TagId, string Language, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PostsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostsDetailCreateResult>> PostsDetailCreateAsync(string PostTitle, string PostContent, long? AnswerPostId, bool? IsViewable, string CoverPhoto, int? PostType, string Language, long? AccountId, bool? HasSentNotifyOnComment, DateTime? UpdatedDate, bool? IsOpenToComment, DateTime? PublishedDate, bool? IsDeleted, bool? IsPrivate, bool? IsStatu, string Url, string TagList, string CategoryList, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<(List<PostsDetailListPagerWithLangResult1> Result1, List<PostsDetailListPagerWithLangResult2> Result2, List<PostsDetailListPagerWithLangResult3> Result3, List<PostsDetailListPagerWithLangResult4> Result4, List<PostsDetailListPagerWithLangResult5> Result5)> PostsDetailListPagerWithLangAsync(int? PageSize, int? PageNum, string Language, long? AccountId, long? LastMinId, int? Type, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PostSelectedCategoriesDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostSelectedCategoriesGetAllResult>> PostSelectedCategoriesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostSelectedCategoriesGetByIDResult>> PostSelectedCategoriesGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostSelectedCategoriesInsertResult>> PostSelectedCategoriesInsertAsync(int? CategoryId, long? PostId, long? AccountId, DateTime? CreatedDate, bool? IsSelectedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostSelectedCategoriesUpdateResult>> PostSelectedCategoriesUpdateAsync(long? Id, int? CategoryId, long? PostId, long? AccountId, DateTime? CreatedDate, bool? IsSelectedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PostSelectedTagsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostSelectedTagsGetAllResult>> PostSelectedTagsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostSelectedTagsGetByIDResult>> PostSelectedTagsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostSelectedTagsInsertResult>> PostSelectedTagsInsertAsync(long? AccountId, long? TagId, DateTime? CreatedDate, long? PostId, bool? IsSelectedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostSelectedTagsUpdateResult>> PostSelectedTagsUpdateAsync(long? Id, long? AccountId, long? TagId, DateTime? CreatedDate, long? PostId, bool? IsSelectedAllready, DateTime? UpdatedDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PostSettingsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostSettingsGetAllResult>> PostSettingsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostSettingsGetByIDResult>> PostSettingsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostSettingsInsertResult>> PostSettingsInsertAsync(long? PostId, bool? HasSentNotifyOnComment, DateTime? UpdatedDate, bool? IsOpenToComment, DateTime? PublishedDate, bool? IsDeleted, bool? IsPrivate, bool? IsStatu, string Url, string PostTags, string PostCategory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostSettingsUpdateResult>> PostSettingsUpdateAsync(long? Id, long? PostId, bool? HasSentNotifyOnComment, DateTime? UpdatedDate, bool? IsOpenToComment, DateTime? PublishedDate, bool? IsDeleted, bool? IsPrivate, bool? IsStatu, string Url, string PostTags, string PostCategory, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostsGetAllResult>> PostsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostsGetByIDResult>> PostsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostsHeaderCirclesByFollowersResult>> PostsHeaderCirclesByFollowersAsync(long? AccountId, int? PostType, int? Top, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostsHeaderCirclesByLangResult>> PostsHeaderCirclesByLangAsync(long? AccountId, string Language, int? PostType, int? Top, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostsHeaderCirclesByLangNoAuthResult>> PostsHeaderCirclesByLangNoAuthAsync(string Language, int? PostType, int? Top, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostsInsertResult>> PostsInsertAsync(string PostTitle, string PostContent, bool? IsViewable, DateTime? CreatedDate, string CoverPhoto, int? PostType, string Language, long? AccountId, long? PostId, Guid? Guid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostsPopularCategoryByLanguageResult>> PostsPopularCategoryByLanguageAsync(string Language, int? Top, int? Min, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostsPopularTagsByLanguageResult>> PostsPopularTagsByLanguageAsync(string Language, int? Top, int? Min, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PostStatisticsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostStatisticsGetAllResult>> PostStatisticsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostStatisticsGetByIDResult>> PostStatisticsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostStatisticsInsertResult>> PostStatisticsInsertAsync(long? PostId, long? ViewCount, long? LikeCount, long? ShareToolClickCount, bool? IsNews, bool? IsPopular, bool? IsTrend, DateTime? LastScanDate, int? CommentCount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostStatisticsSyncResult>> PostStatisticsSyncAsync(long? PostId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostStatisticsUpdateResult>> PostStatisticsUpdateAsync(long? Id, long? PostId, long? ViewCount, long? LikeCount, long? ShareToolClickCount, bool? IsNews, bool? IsPopular, bool? IsTrend, DateTime? LastScanDate, int? CommentCount, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<(List<PostStatisticsUpdateStatisticsResult1> Result1, List<PostStatisticsUpdateStatisticsResult2> Result2)> PostStatisticsUpdateStatisticsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostsUpdateResult>> PostsUpdateAsync(long? Id, string PostTitle, string PostContent, bool? IsViewable, DateTime? CreatedDate, string CoverPhoto, int? PostType, string Language, long? AccountId, long? PostId, Guid? Guid, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> PostTypesDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostTypesGetAllResult>> PostTypesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostTypesGetByIDResult>> PostTypesGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostTypesInsertResult>> PostTypesInsertAsync(string Name, string Reference, string Language, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<PostTypesUpdateResult>> PostTypesUpdateAsync(int? Id, string Name, string Reference, string Language, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ProcedureLogDeleteAsync(DateTime? LogDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ProcedureLogGetAllResult>> ProcedureLogGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ProcedureLogGetByIDResult>> ProcedureLogGetByIDAsync(DateTime? LogDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ProcedureLogInsertResult>> ProcedureLogInsertAsync(DateTime? LogDate, int? ObjectID, string ProcedureName, int? ErrorLine, string ErrorMessage, string AdditionalInfo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ProcedureLogUpdateResult>> ProcedureLogUpdateAsync(DateTime? LogDate, int? DatabaseID, int? ObjectID, string ProcedureName, int? ErrorLine, string ErrorMessage, string AdditionalInfo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> RecordAttributesDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RecordAttributesGetAllResult>> RecordAttributesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RecordAttributesGetByIDResult>> RecordAttributesGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RecordAttributesInsertResult>> RecordAttributesInsertAsync(int? RecordID, string JsonAttributes, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RecordAttributesUpdateResult>> RecordAttributesUpdateAsync(int? Id, int? RecordID, string JsonAttributes, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ReportsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsGetAllResult>> ReportsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsGetByIDResult>> ReportsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsInsertResult>> ReportsInsertAsync(long? AccountId, long? AuthorId, int? PostId, int? ReportCauseId, string Result, DateTime? CreatedDate, string Message, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ReportsUpdateResult>> ReportsUpdateAsync(long? Id, long? AccountId, long? AuthorId, int? PostId, int? ReportCauseId, string Result, DateTime? CreatedDate, string Message, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ResourcesDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ResourcesGetAllResult>> ResourcesGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ResourcesGetByIDResult>> ResourcesGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ResourcesInsertResult>> ResourcesInsertAsync(string KeyName, int? Language, bool? IsRTL, string Translation, string Statu, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ResourcesUpdateResult>> ResourcesUpdateAsync(int? Id, string KeyName, int? Language, bool? IsRTL, string Translation, string Statu, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SMSHistoryDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SMSHistoryGetAllResult>> SMSHistoryGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SMSHistoryGetByIDResult>> SMSHistoryGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SMSHistoryInsertResult>> SMSHistoryInsertAsync(long? AccountId, string SMSCodes, DateTime? CreatedDate, bool? IsSuccessfull, int? AttempCount, int? MaxAttempCount, string PhoneNumber, string CountryCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SMSHistoryUpdateResult>> SMSHistoryUpdateAsync(long? Id, long? AccountId, string SMSCodes, DateTime? CreatedDate, bool? IsSuccessfull, int? AttempCount, int? MaxAttempCount, string PhoneNumber, string CountryCode, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SocialMediaConnectionsDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SocialMediaConnectionsGetAllResult>> SocialMediaConnectionsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SocialMediaConnectionsGetByIDResult>> SocialMediaConnectionsGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SocialMediaConnectionsInsertResult>> SocialMediaConnectionsInsertAsync(string SocialMedia, string ReverseIcon, int? TableOrder, string Url, string Icon, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SocialMediaConnectionsUpdateResult>> SocialMediaConnectionsUpdateAsync(int? Id, string SocialMedia, string ReverseIcon, int? TableOrder, string Url, string Icon, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SqlCatchLogsGetAllResult>> SqlCatchLogsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SqlCatchLogsGetByIDResult>> SqlCatchLogsGetByIDAsync(string FuncName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SqlCatchLogsInsertResult>> SqlCatchLogsInsertAsync(int? Error, string Message, int? XState, DateTime? Date, string MachineName, string LocalAddress, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SqlCatchLogsPagerByAscResult>> SqlCatchLogsPagerByAscAsync(int? PageSize, int? PageNum, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SqlCatchLogsPagerByDescResult>> SqlCatchLogsPagerByDescAsync(int? PageSize, int? PageNum, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SqlCatchLogsUpdateResult>> SqlCatchLogsUpdateAsync(string FuncName, int? Error, string Message, int? XState, DateTime? Date, string MachineName, string LocalAddress, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TableCommentGetAllResult>> TableCommentGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TableCommentInsertAsync(string CommentTitle, string CommentDescription, string Table, string Column, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TagRelationsDeleteAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TagRelationsGetAllResult>> TagRelationsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TagRelationsGetByIDResult>> TagRelationsGetByIDAsync(int? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TagRelationsInsertResult>> TagRelationsInsertAsync(int? TagId, int? ReleatedTagId, int? RelationHeavy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TagRelationsUpdateResult>> TagRelationsUpdateAsync(int? Id, int? TagId, int? ReleatedTagId, int? RelationHeavy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> TagsDeleteAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TagsGetAllResult>> TagsGetAllAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TagsGetByIDResult>> TagsGetByIDAsync(long? Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TagsInsertResult>> TagsInsertAsync(long? CreatedByAdminAccount, long? CreatedByAccount, DateTime? CreatedDate, string Name, string Language, long? ParentTagId, bool? IsBlocked, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TagsUpdateResult>> TagsUpdateAsync(long? Id, long? CreatedByAdminAccount, long? CreatedByAccount, DateTime? CreatedDate, string Name, string Language, long? ParentTagId, bool? IsBlocked, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
