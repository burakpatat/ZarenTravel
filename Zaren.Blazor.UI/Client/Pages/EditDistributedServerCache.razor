@page "/edit-distributed-server-cache"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService

@inject JSONServerService JSONServerService

<PageTitle>Edit DistributedServerCache</PageTitle>
    <div class="col-md-12">
        <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">Cannot save DistributedServerCache</RadzenAlert>
        <RadzenTemplateForm TItem="ZarenUI.Server.Models.JSONServer.DistributedServerCache" Data="@distributedServerCache" Visible="@(distributedServerCache != null)" Submit="@FormSubmit">
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Id" Component="Id" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenTextBox style="display: block; width: 100%" @bind-Value="@distributedServerCache.Id" Name="Id" />
                    <RadzenRequiredValidator Component="Id" Text="Id is required" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Expires At Time" Component="ExpiresAtTime" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenDatePicker DateFormat="MM/dd/yyyy" style="display: block; width: 100%" @bind-Value="@distributedServerCache.ExpiresAtTime" Name="ExpiresAtTime" />
                    <RadzenRequiredValidator Component="ExpiresAtTime" Text="ExpiresAtTime is required" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Sliding Expiration In Seconds" Component="SlidingExpirationInSeconds" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@distributedServerCache.SlidingExpirationInSeconds" Name="SlidingExpirationInSeconds" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Absolute Expiration" Component="AbsoluteExpiration" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenDatePicker DateFormat="MM/dd/yyyy" style="display: block; width: 100%" @bind-Value="@distributedServerCache.AbsoluteExpiration" Name="AbsoluteExpiration" />
                </div>
            </div>
            <div class="row">
                <div class="col d-flex justify-content-end" style="margin-top: 1rem">
                    <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Icon="save" Text="Save" Style="margin-right: 0.5rem" Variant="Variant.Flat" />
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Variant="Variant.Flat" Click="@CancelButtonClick"  />
                </div>
            </div>
        </RadzenTemplateForm>
    </div>

@code {

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        distributedServerCache = await JSONServerService.GetDistributedServerCacheById(id:Id);
    }
    protected bool errorVisible;
    protected ZarenUI.Server.Models.JSONServer.DistributedServerCache distributedServerCache;

    protected async Task FormSubmit()
    {
        try
        {
            await JSONServerService.UpdateDistributedServerCache(id:Id, distributedServerCache);
            DialogService.Close(distributedServerCache);
        }
        catch (Exception ex)
        {
            errorVisible = true;
        }
    }

    protected async Task CancelButtonClick(MouseEventArgs args)
    {
        DialogService.Close(null);
    }
}
