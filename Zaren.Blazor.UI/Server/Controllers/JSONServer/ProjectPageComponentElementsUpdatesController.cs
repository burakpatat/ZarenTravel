using System;
using System.Net;
using System.Data;
using System.Linq;
using Microsoft.Data.SqlClient;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;

using Microsoft.AspNetCore.OData.Query;
using Microsoft.AspNetCore.OData.Routing.Controllers;
using Microsoft.AspNetCore.OData.Results;
using Microsoft.AspNetCore.OData.Deltas;
using Microsoft.AspNetCore.OData.Formatter;

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Internal;

namespace ZarenUI.Server.Controllers.JSONServer
{
    public partial class ProjectPageComponentElementsUpdatesController : ODataController
    {
        private ZarenUI.Server.Data.JSONServerContext context;

        public ProjectPageComponentElementsUpdatesController(ZarenUI.Server.Data.JSONServerContext context)
        {
            this.context = context;
        }


        [HttpGet]
        [EnableQuery(MaxExpansionDepth=10,MaxAnyAllExpressionDepth=10,MaxNodeCount=1000)]
        [Route("odata/JSONServer/ProjectPageComponentElementsUpdatesFunc(Id={Id},WebSitePageComponentsId={WebSitePageComponentsId},DatabaseTypesId={DatabaseTypesId},FunctionTriggerGroupId={FunctionTriggerGroupId},FunctionTriggerRank={FunctionTriggerRank},FunctionTriggerCallAfterSuccessfullTrigger={FunctionTriggerCallAfterSuccessfullTrigger},CrudType={CrudType},Query={Query},UserId={UserId},UserAgent={UserAgent},CreatedDate={CreatedDate},LastScanDate={LastScanDate},ExampleRequest={ExampleRequest},ExampleHtmlCode={ExampleHtmlCode},PreviewCode={PreviewCode},PreviewUrl={PreviewUrl},HasCodeBuild={HasCodeBuild},ExampleResponse={ExampleResponse},RequestScheme={RequestScheme},ResponseScheme={ResponseScheme},ApiRequestUrl={ApiRequestUrl},RequestHeader={RequestHeader},WithMethods={WithMethods},WithHeaders={WithHeaders},WithOrigins={WithOrigins},CacheDBConnection={CacheDBConnection},CacheType={CacheType},DocumentUrl={DocumentUrl},HasAsync={HasAsync},HasCacheMethod={HasCacheMethod},ResponseHasMultiModel={ResponseHasMultiModel},ResponseHasReturnValue={ResponseHasReturnValue},LogCodeMergeDateDBType={LogCodeMergeDateDBType},LogCodeMergeDateDBConnection={LogCodeMergeDateDBConnection},WillLogAllRequest={WillLogAllRequest},WillLogCodeMergeDate={WillLogCodeMergeDate},WillLogAllResponse={WillLogAllResponse},IsDeleted={IsDeleted},Statu={Statu},PublishedDate={PublishedDate},EventType={EventType},HasBusEvent={HasBusEvent},i18Json={i18Json},IfResponseIsSuccessCallThisComponentPartId={IfResponseIsSuccessCallThisComponentPartId},SuccessNotificationTemplate={SuccessNotificationTemplate},Comment={Comment},UserDescriptionForComponent={UserDescriptionForComponent},NameSpaceList={NameSpaceList},SoftwareLanguageId={SoftwareLanguageId},ComponentGroupId={ComponentGroupId},ComponentIsParentInGroup={ComponentIsParentInGroup},ComponentCallRankInGroup={ComponentCallRankInGroup},CustomCode={CustomCode},CustomCss={CustomCss},CustomScript={CustomScript},CustomScheme={CustomScheme},CustomAnimationScheme={CustomAnimationScheme},Price={Price},CurrencyId={CurrencyId},BusEventConnectionId={BusEventConnectionId},Commission={Commission})")]
        public IActionResult ProjectPageComponentElementsUpdatesFunc([FromODataUri] int? Id, [FromODataUri] int? WebSitePageComponentsId, [FromODataUri] int? DatabaseTypesId, [FromODataUri] int? FunctionTriggerGroupId, [FromODataUri] int? FunctionTriggerRank, [FromODataUri] int? FunctionTriggerCallAfterSuccessfullTrigger, [FromODataUri] int? CrudType, [FromODataUri] string Query, [FromODataUri] int? UserId, [FromODataUri] string UserAgent, [FromODataUri] string CreatedDate, [FromODataUri] string LastScanDate, [FromODataUri] string ExampleRequest, [FromODataUri] string ExampleHtmlCode, [FromODataUri] string PreviewCode, [FromODataUri] string PreviewUrl, [FromODataUri] string HasCodeBuild, [FromODataUri] string ExampleResponse, [FromODataUri] string RequestScheme, [FromODataUri] string ResponseScheme, [FromODataUri] string ApiRequestUrl, [FromODataUri] string RequestHeader, [FromODataUri] string WithMethods, [FromODataUri] string WithHeaders, [FromODataUri] string WithOrigins, [FromODataUri] int? CacheDBConnection, [FromODataUri] int? CacheType, [FromODataUri] string DocumentUrl, [FromODataUri] bool? HasAsync, [FromODataUri] bool? HasCacheMethod, [FromODataUri] bool? ResponseHasMultiModel, [FromODataUri] bool? ResponseHasReturnValue, [FromODataUri] int? LogCodeMergeDateDBType, [FromODataUri] string LogCodeMergeDateDBConnection, [FromODataUri] bool? WillLogAllRequest, [FromODataUri] bool? WillLogCodeMergeDate, [FromODataUri] bool? WillLogAllResponse, [FromODataUri] bool? IsDeleted, [FromODataUri] int? Statu, [FromODataUri] string PublishedDate, [FromODataUri] int? EventType, [FromODataUri] bool? HasBusEvent, [FromODataUri] string i18Json, [FromODataUri] int? IfResponseIsSuccessCallThisComponentPartId, [FromODataUri] string SuccessNotificationTemplate, [FromODataUri] string Comment, [FromODataUri] string UserDescriptionForComponent, [FromODataUri] string NameSpaceList, [FromODataUri] int? SoftwareLanguageId, [FromODataUri] int? ComponentGroupId, [FromODataUri] bool? ComponentIsParentInGroup, [FromODataUri] int? ComponentCallRankInGroup, [FromODataUri] string CustomCode, [FromODataUri] string CustomCss, [FromODataUri] string CustomScript, [FromODataUri] string CustomScheme, [FromODataUri] string CustomAnimationScheme, [FromODataUri] decimal? Price, [FromODataUri] int? CurrencyId, [FromODataUri] int? BusEventConnectionId, [FromODataUri] decimal? Commission)
        {
            this.OnProjectPageComponentElementsUpdatesDefaultParams(ref Id, ref WebSitePageComponentsId, ref DatabaseTypesId, ref FunctionTriggerGroupId, ref FunctionTriggerRank, ref FunctionTriggerCallAfterSuccessfullTrigger, ref CrudType, ref Query, ref UserId, ref UserAgent, ref CreatedDate, ref LastScanDate, ref ExampleRequest, ref ExampleHtmlCode, ref PreviewCode, ref PreviewUrl, ref HasCodeBuild, ref ExampleResponse, ref RequestScheme, ref ResponseScheme, ref ApiRequestUrl, ref RequestHeader, ref WithMethods, ref WithHeaders, ref WithOrigins, ref CacheDBConnection, ref CacheType, ref DocumentUrl, ref HasAsync, ref HasCacheMethod, ref ResponseHasMultiModel, ref ResponseHasReturnValue, ref LogCodeMergeDateDBType, ref LogCodeMergeDateDBConnection, ref WillLogAllRequest, ref WillLogCodeMergeDate, ref WillLogAllResponse, ref IsDeleted, ref Statu, ref PublishedDate, ref EventType, ref HasBusEvent, ref i18Json, ref IfResponseIsSuccessCallThisComponentPartId, ref SuccessNotificationTemplate, ref Comment, ref UserDescriptionForComponent, ref NameSpaceList, ref SoftwareLanguageId, ref ComponentGroupId, ref ComponentIsParentInGroup, ref ComponentCallRankInGroup, ref CustomCode, ref CustomCss, ref CustomScript, ref CustomScheme, ref CustomAnimationScheme, ref Price, ref CurrencyId, ref BusEventConnectionId, ref Commission);

            var items = this.context.ProjectPageComponentElementsUpdates.FromSqlRaw("EXEC [dbo].[ProjectPageComponentElementsUpdate] @Id={0}, @WebSitePageComponentsId={1}, @DatabaseTypesId={2}, @FunctionTriggerGroupId={3}, @FunctionTriggerRank={4}, @FunctionTriggerCallAfterSuccessfullTrigger={5}, @CrudType={6}, @Query={7}, @UserId={8}, @UserAgent={9}, @CreatedDate={10}, @LastScanDate={11}, @ExampleRequest={12}, @ExampleHtmlCode={13}, @PreviewCode={14}, @PreviewUrl={15}, @HasCodeBuild={16}, @ExampleResponse={17}, @RequestScheme={18}, @ResponseScheme={19}, @ApiRequestUrl={20}, @RequestHeader={21}, @WithMethods={22}, @WithHeaders={23}, @WithOrigins={24}, @CacheDBConnection={25}, @CacheType={26}, @DocumentUrl={27}, @HasAsync={28}, @HasCacheMethod={29}, @ResponseHasMultiModel={30}, @ResponseHasReturnValue={31}, @LogCodeMergeDateDBType={32}, @LogCodeMergeDateDBConnection={33}, @WillLogAllRequest={34}, @WillLogCodeMergeDate={35}, @WillLogAllResponse={36}, @IsDeleted={37}, @Statu={38}, @PublishedDate={39}, @EventType={40}, @HasBusEvent={41}, @i18Json={42}, @IfResponseIsSuccessCallThisComponentPartId={43}, @SuccessNotificationTemplate={44}, @Comment={45}, @UserDescriptionForComponent={46}, @NameSpaceList={47}, @SoftwareLanguageId={48}, @ComponentGroupId={49}, @ComponentIsParentInGroup={50}, @ComponentCallRankInGroup={51}, @CustomCode={52}, @CustomCss={53}, @CustomScript={54}, @CustomScheme={55}, @CustomAnimationScheme={56}, @Price={57}, @CurrencyId={58}, @BusEventConnectionId={59}, @Commission={60}", Id, WebSitePageComponentsId, DatabaseTypesId, FunctionTriggerGroupId, FunctionTriggerRank, FunctionTriggerCallAfterSuccessfullTrigger, CrudType, Query, UserId, UserAgent, CreatedDate, LastScanDate, ExampleRequest, ExampleHtmlCode, PreviewCode, PreviewUrl, HasCodeBuild, ExampleResponse, RequestScheme, ResponseScheme, ApiRequestUrl, RequestHeader, WithMethods, WithHeaders, WithOrigins, CacheDBConnection, CacheType, DocumentUrl, HasAsync, HasCacheMethod, ResponseHasMultiModel, ResponseHasReturnValue, LogCodeMergeDateDBType, LogCodeMergeDateDBConnection, WillLogAllRequest, WillLogCodeMergeDate, WillLogAllResponse, IsDeleted, Statu, PublishedDate, EventType, HasBusEvent, i18Json, IfResponseIsSuccessCallThisComponentPartId, SuccessNotificationTemplate, Comment, UserDescriptionForComponent, NameSpaceList, SoftwareLanguageId, ComponentGroupId, ComponentIsParentInGroup, ComponentCallRankInGroup, CustomCode, CustomCss, CustomScript, CustomScheme, CustomAnimationScheme, Price, CurrencyId, BusEventConnectionId, Commission).ToList().AsQueryable();

            this.OnProjectPageComponentElementsUpdatesInvoke(ref items);

            return Ok(items);
        }

        partial void OnProjectPageComponentElementsUpdatesDefaultParams(ref int? Id, ref int? WebSitePageComponentsId, ref int? DatabaseTypesId, ref int? FunctionTriggerGroupId, ref int? FunctionTriggerRank, ref int? FunctionTriggerCallAfterSuccessfullTrigger, ref int? CrudType, ref string Query, ref int? UserId, ref string UserAgent, ref string CreatedDate, ref string LastScanDate, ref string ExampleRequest, ref string ExampleHtmlCode, ref string PreviewCode, ref string PreviewUrl, ref string HasCodeBuild, ref string ExampleResponse, ref string RequestScheme, ref string ResponseScheme, ref string ApiRequestUrl, ref string RequestHeader, ref string WithMethods, ref string WithHeaders, ref string WithOrigins, ref int? CacheDBConnection, ref int? CacheType, ref string DocumentUrl, ref bool? HasAsync, ref bool? HasCacheMethod, ref bool? ResponseHasMultiModel, ref bool? ResponseHasReturnValue, ref int? LogCodeMergeDateDBType, ref string LogCodeMergeDateDBConnection, ref bool? WillLogAllRequest, ref bool? WillLogCodeMergeDate, ref bool? WillLogAllResponse, ref bool? IsDeleted, ref int? Statu, ref string PublishedDate, ref int? EventType, ref bool? HasBusEvent, ref string i18Json, ref int? IfResponseIsSuccessCallThisComponentPartId, ref string SuccessNotificationTemplate, ref string Comment, ref string UserDescriptionForComponent, ref string NameSpaceList, ref int? SoftwareLanguageId, ref int? ComponentGroupId, ref bool? ComponentIsParentInGroup, ref int? ComponentCallRankInGroup, ref string CustomCode, ref string CustomCss, ref string CustomScript, ref string CustomScheme, ref string CustomAnimationScheme, ref decimal? Price, ref int? CurrencyId, ref int? BusEventConnectionId, ref decimal? Commission);

        partial void OnProjectPageComponentElementsUpdatesInvoke(ref IQueryable<ZarenUI.Server.Models.JSONServer.ProjectPageComponentElementsUpdate> items);
    }
}
