@page "/edit-auto-complete"
@attribute [Authorize]
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService

@inject ZarenService ZarenService
@inject Microsoft.Extensions.Localization.IStringLocalizer<EditAutoComplete> L

<PageTitle>Edit AutoComplete</PageTitle>
<RadzenRow>
    <RadzenColumn SizeMD="9">
    <RadzenLabel style="font-weight: bold" Text="Item no longer available." Visible="@(!canEdit)" />
    </RadzenColumn>
    <RadzenColumn SizeMD="3">
    <RadzenButton ButtonStyle="ButtonStyle.Secondary" style="margin-bottom: 20px" Text="Close" Visible="@(!canEdit)" Click="@CancelButtonClick" />
    </RadzenColumn>
</RadzenRow>
<RadzenRow>
    <RadzenColumn SizeMD="9">
    <RadzenLabel style="font-weight: bold" Text="Another user has made conflicting changes to one or more of the fields you have modified. Please reload." Visible="@hasChanges" />
    </RadzenColumn>
    <RadzenColumn SizeMD="3">
    <RadzenButton ButtonStyle="ButtonStyle.Secondary" Icon="autorenew" style="margin-bottom: 20px" Text="Reload" Visible="@hasChanges" Click="@ReloadButtonClick" />
    </RadzenColumn>
</RadzenRow>

    <RadzenColumn SizeMD=12>
        <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">Cannot save AutoComplete</RadzenAlert>
        <RadzenTemplateForm TItem="ZarenBO2.Models.Zaren.AutoComplete" Data="@autoComplete" Visible="@(autoComplete != null && canEdit)" Submit="@FormSubmit">
            <RadzenRow style="margin-bottom: 1rem">
                <RadzenColumn SizeMD="3">
                    <RadzenLabel Text="Name" Component="Name" style="width: 100%" />
                </RadzenColumn>
                <RadzenColumn SizeMD="9">
                    <RadzenTextBox style="display: block; width: 100%" @bind-Value="@autoComplete.Name" Name="Name" />
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow style="margin-bottom: 1rem">
                <RadzenColumn SizeMD="3">
                    <RadzenLabel Text="Api Id" Component="ApiId" style="width: 100%" />
                </RadzenColumn>
                <RadzenColumn SizeMD="9">
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@autoComplete.ApiId" Name="ApiId" />
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow style="margin-bottom: 1rem">
                <RadzenColumn SizeMD="3">
                    <RadzenLabel Text="System Id" Component="SystemId" style="width: 100%" />
                </RadzenColumn>
                <RadzenColumn SizeMD="9">
                    <RadzenTextBox style="display: block; width: 100%" @bind-Value="@autoComplete.SystemId" Name="SystemId" />
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow style="margin-bottom: 1rem">
                <RadzenColumn SizeMD="3">
                    <RadzenLabel Text="System Type" Component="SystemType" style="width: 100%" />
                </RadzenColumn>
                <RadzenColumn SizeMD="9">
                    <RadzenTextBox style="display: block; width: 100%" @bind-Value="@autoComplete.SystemType" Name="SystemType" />
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow style="margin-bottom: 1rem">
                <RadzenColumn SizeMD="3">
                    <RadzenLabel Text="Language Id" Component="LanguageId" style="width: 100%" />
                </RadzenColumn>
                <RadzenColumn SizeMD="9">
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@autoComplete.LanguageId" Name="LanguageId" />
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow style="margin-bottom: 1rem">
                <RadzenColumn SizeMD="3">
                    <RadzenLabel Text="Auto Complete Type" Component="AutoCompleteType" style="width: 100%" />
                </RadzenColumn>
                <RadzenColumn SizeMD="9">
                    <RadzenDropDownDataGrid Data="@autoCompleteTypesForType" TextProperty="Name" ValueProperty="Id"
                         Placeholder="Choose AutoCompleteType" style="display: block; width: 100%" @bind-Value="@autoComplete.Type" Name="Type"
                           />
                </RadzenColumn>
            </RadzenRow>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                    <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Icon="save" Text="Save" Variant="Variant.Flat" />
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Variant="Variant.Flat" Click="@CancelButtonClick"  />
            </RadzenStack>
        </RadzenTemplateForm>
    </RadzenColumn>

@code {

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        autoComplete = await ZarenService.GetAutoCompleteById(Id);

        autoCompleteTypesForType = await ZarenService.GetAutoCompleteTypes();
    }
    protected bool errorVisible;
    protected ZarenBO2.Models.Zaren.AutoComplete autoComplete;

    protected IEnumerable<ZarenBO2.Models.Zaren.AutoCompleteType> autoCompleteTypesForType;

    protected async Task FormSubmit()
    {
        try
        {
            await ZarenService.UpdateAutoComplete(Id, autoComplete);
            DialogService.Close(autoComplete);
        }
        catch (Exception ex)
        {
            hasChanges = ex is Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException;
            canEdit = !(ex is Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException);
            errorVisible = true;
        }
    }

    protected async Task CancelButtonClick(MouseEventArgs args)
    {
        DialogService.Close(null);
    }


    protected bool hasChanges = false;
    protected bool canEdit = true;

    [Inject]
    protected SecurityService Security { get; set; }


    protected async Task ReloadButtonClick(MouseEventArgs args)
    {
       ZarenService.Reset();
        hasChanges = false;
        canEdit = true;

        autoComplete = await ZarenService.GetAutoCompleteById(Id);
    }
}
