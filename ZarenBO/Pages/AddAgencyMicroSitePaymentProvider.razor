@page "/add-agency-micro-site-payment-provider"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService

@inject zaren_prodService zaren_prodService

<PageTitle>Add AgencyMicroSitePaymentProvider</PageTitle>
    <div class="col-md-12">
        <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">Cannot save AgencyMicroSitePaymentProvider</RadzenAlert>
        <RadzenTemplateForm TItem="ZarenTravelBO.Models.zaren_prod.AgencyMicroSitePaymentProvider" Data="@agencyMicroSitePaymentProvider" Visible="@(agencyMicroSitePaymentProvider != null)" Submit="@FormSubmit">
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Created Date" Component="CreatedDate" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenDatePicker DateFormat="MM/dd/yyyy" style="display: block; width: 100%" @bind-Value="@agencyMicroSitePaymentProvider.CreatedDate" Name="CreatedDate" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Updated Date" Component="UpdatedDate" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenDatePicker DateFormat="MM/dd/yyyy" style="display: block; width: 100%" @bind-Value="@agencyMicroSitePaymentProvider.UpdatedDate" Name="UpdatedDate" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Created By" Component="CreatedBy" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@agencyMicroSitePaymentProvider.CreatedBy" Name="CreatedBy" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Updated By" Component="UpdatedBy" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@agencyMicroSitePaymentProvider.UpdatedBy" Name="UpdatedBy" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Payment Type Id" Component="PaymentTypeId" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@agencyMicroSitePaymentProvider.PaymentTypeId" Name="PaymentTypeId" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Statu" Component="Statu" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenNumeric style="display: block; width: 100%" @bind-Value="@agencyMicroSitePaymentProvider.Statu" Name="Statu" />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Agency" Component="Agency" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenDropDownDataGrid Data="@agenciesForAgencyId" TextProperty="InvoiceName" ValueProperty="Id"
                         Placeholder="Choose Agency" style="display: block; width: 100%" @bind-Value="@agencyMicroSitePaymentProvider.AgencyId" Name="AgencyId"
                           />
                </div>
            </div>
            <div style="margin-bottom: 1rem" class="row">
                <div class="col-md-3">
                    <RadzenLabel Text="Agency Micro Site" Component="AgencyMicroSite" style="width: 100%" />
                </div>
                <div class="col-md-9">
                    <RadzenDropDownDataGrid Data="@agencyMicroSitesForMicroSiteId" TextProperty="Domain" ValueProperty="Id"
                         Placeholder="Choose AgencyMicroSite" style="display: block; width: 100%" @bind-Value="@agencyMicroSitePaymentProvider.MicroSiteId" Name="MicroSiteId"
                           />
                </div>
            </div>
            <div class="row">
                <div class="col d-flex justify-content-end" style="margin-top: 1rem">
                    <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Icon="save" Text="Save" Style="margin-right: 0.5rem" Variant="Variant.Flat" />
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Variant="Variant.Flat" Click="@CancelButtonClick"  />
                </div>
            </div>
        </RadzenTemplateForm>
    </div>

@code {

    protected override async Task OnInitializedAsync()
    {
        agencyMicroSitePaymentProvider = new ZarenTravelBO.Models.zaren_prod.AgencyMicroSitePaymentProvider();

        agenciesForAgencyId = await zaren_prodService.GetAgencies();

        agencyMicroSitesForMicroSiteId = await zaren_prodService.GetAgencyMicroSites();
    }
    protected bool errorVisible;
    protected ZarenTravelBO.Models.zaren_prod.AgencyMicroSitePaymentProvider agencyMicroSitePaymentProvider;

    protected IEnumerable<ZarenTravelBO.Models.zaren_prod.Agency> agenciesForAgencyId;

    protected IEnumerable<ZarenTravelBO.Models.zaren_prod.AgencyMicroSite> agencyMicroSitesForMicroSiteId;

    protected async Task FormSubmit()
    {
        try
        {
            await zaren_prodService.CreateAgencyMicroSitePaymentProvider(agencyMicroSitePaymentProvider);
            DialogService.Close(agencyMicroSitePaymentProvider);
        }
        catch (Exception ex)
        {
            errorVisible = true;
        }
    }

    protected async Task CancelButtonClick(MouseEventArgs args)
    {
        DialogService.Close(null);
    }
}
